package com.ibm.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.ibm.domain.core.ARole;

import com.ibm.dao.mysql.ARole_Default_ActivityDao;

import com.ibm.domain.core.IBUser;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("ARole_Default_ActivityService")
public class ARole_Default_ActivityService extends IBBaseService  {
private static Logger log = Logger.getLogger(ARole_Default_ActivityService.class.getName());

	private ARole_Default_ActivityDao ARole_Default_Activity_dao;


	public ARole_Default_ActivityDao get_ARole_Default_Activity_dao() {
		return ARole_Default_Activity_dao;
	}


	@Resource(name="ARole_Default_ActivityDao")
	public void set_ARole_Default_Activity_dao(ARole_Default_ActivityDao ARole_Default_Activity_dao) {
		this.ARole_Default_Activity_dao = ARole_Default_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  ARole noun into database
	*@param ARole
	*@param user
	*@return the_ARole object will return
	*@throws Exception
	*/

	public ARole create_arole(ARole ARole, IBUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_arole service operation started !");

		try{
			ARole the_ARole;

			the_ARole = ARole_Default_Activity_dao.create_arole(ARole, user);

 			log.info(" Object returned from create_arole  service method !");
			return the_ARole;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_arole service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  ARole noun into database
	*@param ARole
	*@param user
	*@return the_ARole object will return
	*@throws Exception
	*/

	public ARole update_arole(ARole ARole, IBUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_arole service operation started !");

		try{
			ARole the_ARole;

			the_ARole = ARole_Default_Activity_dao.update_arole(ARole, user);

 			log.info(" Object returned from update_arole  service method !");
			return the_ARole;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_arole service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  ARole noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_ARole object will return
	*@throws Exception
	*/

	public ARole arole_search_for_update(long id, IBUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("arole_search_for_update service operation started !");

		try{
			ARole the_ARole;

			the_ARole = ARole_Default_Activity_dao.arole_search_for_update(id, user);

 			log.info(" Object returned from arole_search_for_update  service method !");
			return the_ARole;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("arole_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  ARole noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_ARole id deleted based on id
	*@throws Exception
	*/

	public String  delete_arole(long id, IBUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_arole service operation started !");

		try{
			String method_return_message;

			method_return_message = ARole_Default_Activity_dao.delete_arole(id, user);

 			log.info(" Object returned from delete_arole  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_arole service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  ARole noun from  database
	*
	*
	*@return List of ARole object will return
	*@throws Exception
	*/

	public ArrayList<ARole> get_all_arole() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<ARole> ARole_list;

			ARole_list = ARole_Default_Activity_dao.get_all_arole();

 			log.info(" Object returned from   service method !");
			return ARole_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}